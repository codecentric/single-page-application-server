#!/bin/sh -e

test ! -z "${GIT_REF}" || ( echo "GIT_REF is not specified" && false )
test ! -z "${NGINX_TAG}" || ( echo "NGINX_TAG is not specified" && false )
test ! -z "${MATRIX_NGINX}" || ( echo "MATRIX_NGINX is not specified" && false )

VERSION="$(echo ${GIT_REF} | grep -oE '[0-9]+\.[0-9]+\.[0-9]+.*' | tr -d '\n')"
echo "VERSION=${VERSION}"

MAJOR_VERSION="$(echo ${GIT_REF} | grep -oE 'v[0-9]+' | grep -oE '[0-9]+' | tr -d '\n')"
echo "MAJOR_VERSION=${MAJOR_VERSION}"

test ! -z "${VERSION}" || ( echo "VERSION is not specified" && false )
test ! -z "${MAJOR_VERSION}" || ( echo "MAJOR_VERSION is not specified" && false )

git fetch --tags

GLOBAL_LATEST_VERSION="$(git-semver latest --include-pre-releases)"
echo "GLOBAL_LATEST_VERSION=${GLOBAL_LATEST_VERSION}"

test ! -z "${GLOBAL_LATEST_VERSION}" || ( echo "GLOBAL_LATEST_VERSION is not specified" && false )

LATEST_VERSION_BY_MAJOR="$(git-semver latest --major-version=${MAJOR_VERSION} --include-pre-releases)"
echo "LATEST_VERSION_BY_MAJOR=${LATEST_VERSION_BY_MAJOR}"

test ! -z "${LATEST_VERSION_BY_MAJOR}" || ( echo "LATEST_VERSION_BY_MAJOR is not specified" && false )

VERSION_IMAGE_TAG="${VERSION}-nginx-${NGINX_TAG}"
echo "VERSION_IMAGE_TAG=${VERSION_IMAGE_TAG}"

MAJOR_IMAGE_TAG="${MAJOR_VERSION}-nginx-${NGINX_TAG}"
echo "MAJOR_IMAGE_TAG=${MAJOR_IMAGE_TAG}"

LATEST_IMAGE_TAG="latest-nginx-${NGINX_TAG}"
echo "LATEST_IMAGE_TAG=${LATEST_IMAGE_TAG}"

# Push major version tag only if this is the latest version of that major version
if [ "${VERSION}" = "${LATEST_VERSION_BY_MAJOR}" ]; then
  TAGS="${MAJOR_IMAGE_TAG}"

  # Push latest tags only if this is the latest version of the latest major version
  if [ "${VERSION}" = "${GLOBAL_LATEST_VERSION}" ]; then
    TAGS="${TAGS},${LATEST_IMAGE_TAG}"

    # The "latest" tag should be based on nginx:stable-alpine
    if [ "${MATRIX_NGINX}" = "stable" ]; then
      TAGS="${TAGS},latest"
    fi
  fi
fi

# Push full version tag only on explicit nginx version tags
if [ "${MATRIX_NGINX}" = "{0}" ]; then
  if [ ! -z "${TAGS}" ]; then
    TAGS="${TAGS},"
  fi

  TAGS="${TAGS}${VERSION_IMAGE_TAG}"
fi

echo "::set-output name=tags::${TAGS}"
echo "TAGS=${TAGS}"
